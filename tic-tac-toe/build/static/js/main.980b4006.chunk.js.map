{"version":3,"sources":["components/Footer.js","components/About.js","components/Cell.js","components/GameField.js","components/436667__herraportti__snap3.wav","components/Modal.js","components/newgame.wav","components/constant.js","components/CheckBox.js","music.mp3","components/Game.js","utils.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Link","href","About","Component","Cell","props","styled","div","keyframes","bounce","style","onClick","onChange","value","GameField","cells","map","item","index","getModalStyle","useStyles","makeStyles","theme","paper","margin","marginTop","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","SimpleModal","classes","React","useState","modalStyle","open","setOpen","useSound","clickSound","winX","localStorage","gameGeneralStatic","JSON","parse","X","winO","O","draw","useEffect","onKeypress","e","code","handleClose","handleOpen","document","addEventListener","removeEventListener","body","id","Button","variant","color","Modal","onClose","aria-labelledby","aria-describedby","iconsView","CheckBox","state","icons","colorField","sound","handleChange","event","setState","target","setItem","stringify","this","gameGeneralSettings","updateData","type","name","defaultChecked","Game","stepNext","setStepNext","Array","fill","gameField","setGameField","countStep","setCountStep","winner","squares","lines","i","length","a","b","c","calculateWinner","play","stop","newGameSound","playGame","isHovering","setIsHovering","colorHeader","setcolorHeader","setIconsView","colorMain","setColorMain","setWinX","setWinO","setDraw","url","Audio","audio","playing","setPlaying","loop","autoplay","pause","useAudio","Music","toggle","gameState","field","count","step","isSound","isMusic","gameStatic","gameGeneral","ButtonGroup","disableElevation","title","size","IconButton","aria-label","result","cancelGame","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.980b4006.chunk.js","sourcesContent":["import React from 'react';\nimport Link from '@material-ui/core/Link';\n\n\n\nexport default function Footer() {\n    return (\n        <div className='footer'>\n            <Link href=\"/react/tic-tac-toe/build/\">\n                Game\n                </Link>\n            <Link href='/react/tic-tac-toe/build/About' >\n                About\n                </Link>\n            <Link href=\"https://rs.school/js/\" >\n                RS-School\n            </Link>\n            <Link href=\"https://github.com/General-m\" >\n                Github\n            </Link>\n\n\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nexport default class About extends Component {\n    render() {\n        return (\n            <div className='about'>\n                <h1> About Tic-tac-toe game</h1>\n                <div className='description'>\n                    To start a new game click New Game <br />\n\n\n                    <h3>Hot keys:</h3>\n                    <kbd>N</kbd> start New Game <br />\n                    <kbd>S</kbd> open Statistic <br />\n                    <kbd>W</kbd> on/off sound <br />\n                    <kbd>Q</kbd> on/off music (default off) <br />\n                    <kbd>A</kbd> change next step player (cheat mode &#128520;) <br />\n\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { bounce } from 'react-animations'\n\nexport default function Cell(props) {\n    const Bounce = styled.div`animation: 2s ${keyframes`${bounce}`} infinite`;\n\n    return (\n\n        <div className=\"cell\" style={props.style} onClick={props.onClick} onChange={props.onChange}>{props.value} </div>\n\n    )\n}\n","import React from 'react';\nimport Cell from './Cell'\n\nexport default function GameField({ cells, onClick, onChange }) {\n    return (\n        <div className='game__field' >\n            {\n                cells.map((item, index) => (\n                    <Cell key={index} value={item} onClick={() => onClick(index)} onChange={() => onChange(index)} />\n                ))\n            }\n        </div>\n\n    )\n}\n","export default __webpack_public_path__ + \"static/media/436667__herraportti__snap3.b0d8ddc5.wav\";","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button } from '@material-ui/core';\nimport useSound from 'use-sound';\nimport clickSound from './436667__herraportti__snap3.wav';\n\n\nfunction getModalStyle() {\n    // const top = 50 + rand();\n    // const left = 50 + rand();\n\n    return {\n        // top: '50%',\n        // left: ' 50%',\n        // transform: \"translate( 50%,  50%)\",\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        margin: 'auto',\n        marginTop: '80px',\n        // position: 'absolute',\n        width: 300,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport default function SimpleModal() {\n\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [play] = useSound(clickSound);\n    const winX = (localStorage.gameGeneralStatic) ? (JSON.parse(localStorage.gameGeneralStatic)).X : 0;\n    const winO = (localStorage.gameGeneralStatic) ? (JSON.parse(localStorage.gameGeneralStatic)).O : 0;\n    const draw = (localStorage.gameGeneralStatic) ? (JSON.parse(localStorage.gameGeneralStatic)).draw : 0;\n\n\n    useEffect(() => {\n        const onKeypress = e => {\n            switch (e.code) {\n                case 'KeyS':\n                    if (open) {\n                        handleClose();\n                    }\n                    else {\n                        handleOpen();\n                    }\n\n                    break;\n\n                default:\n                    break;\n            }\n\n        }\n\n        document.addEventListener('keypress', onKeypress);\n\n        return () => {\n            document.removeEventListener('keypress', onKeypress);\n        };\n    }, [open]);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const body = (\n        <div style={modalStyle} className={classes.paper}>\n            <h2 id=\"simple-modal-title\">Statistics</h2>\n            <div id=\"simple-modal-description\">\n                Win X: {winX} <br />\n             Win O:  {winO} <br />\n             Draw:  {draw}\n            </div>\n\n\n        </div>\n    );\n\n    return (\n        <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n                Statistic\n            </Button>\n\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                {body}\n            </Modal>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/newgame.16f4c4c9.wav\";","const iconsView = [\n    ['╳', '◯'],\n    ['🔥', '❄']\n]\n\nexport default iconsView;","import React, { Component } from 'react';\n\n\nexport default class CheckBox extends Component {\n\n    state = {\n        icons: 1,\n        colorField: 'blue',\n        sound: true\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            icons: event.target.value\n        })\n    };\n\n    componentDidUpdate() {\n        localStorage.setItem('gameGeneralSettings', JSON.stringify(this.state));\n    }\n\n\n    componentDidMount() {\n        if (localStorage.gameGeneralSettings) {\n            this.setState({\n                icons: (JSON.parse(localStorage.gameGeneralSettings)).icons\n            })\n\n        }\n\n    }\n\n    render() {\n        const { updateData } = this.props;\n        const { icons } = this.state;\n        return (\n            <div>\n                <div className='view__settings' >\n                    <div className=\"form_radio\"  >\n                        <input id=\"radio-1\" type=\"radio\" name=\"radio\" value=\"0\" onClick={this.handleChange} onChange={updateData(this.state.icons)} defaultChecked={this.state.icons === 0} />\n                        <label className='icons' >╳◯</label>\n                    </div>\n                    <div className=\"form_radio\" >\n                        <input id=\"radio-2\" type=\"radio\" name=\"radio\" value=\"1\" onClick={this.handleChange} onChange={updateData(this.state.icons)} defaultChecked={this.state.icons === 1} />\n                        <label className='icons' > 🔥❄</label>\n                    </div>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/music.09b11df2.mp3\";","import React, { useState, useEffect } from 'react';\nimport GameField from './GameField';\nimport Modal from './Modal'\nimport { calculateWinner } from '../utils';\nimport { Button } from '@material-ui/core';\nimport { ButtonGroup } from '@material-ui/core';\nimport useSound from 'use-sound';\nimport clickSound from './436667__herraportti__snap3.wav';\nimport newGameSound from './newgame.wav';\nimport iconsView from './constant';\nimport Checkbox from './CheckBox';\nimport { IconButton } from '@material-ui/core';\nimport MusicIcon from '@material-ui/icons/MusicOffRounded';\nimport VolumeMute from '@material-ui/icons/MicNone';\nimport Music from '../music.mp3'\n\n\nexport default function Game() {\n    const [stepNext, setStepNext] = useState(true);\n    const [gameField, setGameField] = useState(Array(9).fill(null));\n    const [countStep, setCountStep] = useState(0);\n    const winner = calculateWinner(gameField);\n    const [play, { stop }] = useSound(clickSound);\n    const [playGame] = useSound(newGameSound);\n    const [isHovering, setIsHovering] = useState(true);\n    const [colorHeader, setcolorHeader] = useState('#64b5f6');\n    const [icons, setIconsView] = useState(0);\n    const [colorMain, setColorMain] = useState('#115293');\n    const [winX, setWinX] = useState(0);\n    const [winO, setWinO] = useState(0);\n    const [draw, setDraw] = useState(0);\n\n\n\n    const useAudio = url => {\n        const [audio] = useState(new Audio(url));\n        const [playing, setPlaying] = useState(false);\n\n        const toggle = () => setPlaying(!playing);\n\n        useEffect(() => {\n            if (playing) {\n                audio.play();\n                audio.loop = true;\n                audio.autoplay = true;\n            }\n            else audio.pause()\n\n            // playing ? audio.play() : audio.pause();\n        },\n            [playing]\n        );\n\n        useEffect(() => {\n            audio.addEventListener('ended', () => setPlaying(false));\n            return () => {\n                audio.removeEventListener('ended', () => setPlaying(false));\n            };\n        }, []);\n\n        return [playing, toggle];\n    };\n\n    const [playing, toggle] = useAudio(Music);\n\n    const gameState = {\n        field: gameField,\n        count: countStep,\n        step: stepNext,\n        isSound: isHovering,\n        colorMain: colorMain,\n        colorHeader: colorHeader,\n        isMusic: playing\n    }\n    const gameStatic = {\n        X: winX,\n        O: winO,\n        draw: draw\n    }\n\n    useEffect(() => {\n        if (winner) {\n            (stepNext) ? setWinO(winO + 1) : setWinX(winX + 1);\n        }\n\n    }, [countStep])\n\n    useEffect(() => {\n        if (!winner && countStep == 9) {\n            setDraw(draw + 1)\n        }\n    }, [gameField])\n\n\n    useEffect(() => {\n        if (localStorage.gameGeneral) {\n            setGameField((JSON.parse(localStorage.gameGeneral)).field);\n            setCountStep((JSON.parse(localStorage.gameGeneral)).count);\n            setStepNext((JSON.parse(localStorage.gameGeneral)).step);\n            setIsHovering((JSON.parse(localStorage.gameGeneral)).isSound);\n            setColorMain((JSON.parse(localStorage.gameGeneral)).colorMain);\n            setcolorHeader((JSON.parse(localStorage.gameGeneral)).colorHeader);\n        }\n    }, [icons])\n\n    useEffect(() => {\n        if (localStorage.gameGeneralStatic) {\n            setWinX((JSON.parse(localStorage.gameGeneralStatic)).X)\n            setWinO((JSON.parse(localStorage.gameGeneralStatic)).O)\n            setDraw((JSON.parse(localStorage.gameGeneralStatic)).draw)\n        }\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem('gameGeneral', JSON.stringify(gameState));\n\n    })\n    useEffect(() => {\n        localStorage.setItem('gameGeneralStatic', JSON.stringify(gameStatic));\n    })\n\n\n\n    useEffect(() => {\n        const onKeypress = e => {\n\n            switch (e.code) {\n                case 'KeyN':\n                    setGameField(Array(9).fill(null));\n                    setCountStep(0);\n                    playGame();\n                    break;\n                case 'KeyW':\n                    if (isHovering) {\n                        setIsHovering(false);\n                        stop();\n                    }\n                    else {\n                        setIsHovering(true);\n                        play();\n                    }\n                    break;\n\n                case 'KeyA':\n                    setStepNext(!stepNext);\n                    break;\n\n                case 'KeyQ':\n                    if (playing) {\n                        toggle();\n                    }\n                    toggle();\n                    break;\n\n                default:\n                    break;\n            }\n\n        }\n\n        document.addEventListener('keypress', onKeypress);\n\n        return () => {\n            document.removeEventListener('keypress', onKeypress);\n        };\n    }, [isHovering, playing]);\n\n\n    const handleClick = (index) => {\n        const field = [...gameField];\n        if (winner || field[index]) {\n            return\n        }\n\n        field[index] = stepNext ? iconsView[icons][0] : iconsView[icons][1];\n        setStepNext(!stepNext);\n        setCountStep(countStep + 1);\n        setGameField(field);\n        if (isHovering) {\n            play();\n        }\n\n\n    }\n\n    const startNewGame = () => {\n        return (\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                setGameField(Array(9).fill(null));\n                setCountStep(0);\n                if (isHovering) {\n                    play();\n                }\n\n            }} >\n                New Game\n            </Button>\n        )\n    }\n\n    // const startAutoPlay = (index) => {\n    //     setGameField(Array(9).fill(null));\n    //     setCountStep(0);\n    //     const field = [...gameField];\n    //     let timerId = setInterval(() => {\n    //         let index = Math.floor(Math.random() * 8);\n    //         \n\n    //         field[index] = stepNext ? 'X' : 'O';\n    //         setStepNext(!stepNext);\n    //         setCountStep(countStep + 1);\n\n\n    //     }, 1000);\n    // }\n\n    const cancelGame = () => {\n        let result = '';\n        if (winner) {\n\n            result = 'Congratulations! Wins ' + winner;\n\n        }\n        else if (countStep == 9) {\n            result = \"It's draw, try again!\"\n        }\n        else {\n            result = 'Next move ' + (stepNext ? 'X' : 'O');\n        }\n\n\n        return (\n            <div className='game__status'>\n                {result}\n\n            </div>\n        )\n    }\n\n    const updateData = (value) => {\n        setIconsView(value);\n\n    }\n\n\n    const toggleSound = () => {\n        if (isHovering) {\n            setIsHovering(false);\n            stop();\n        }\n        else {\n            setIsHovering(true);\n            play();\n        }\n    }\n\n\n    return (\n        <div className='container' style={{ backgroundColor: colorMain }} >\n            <div className='header' style={{ backgroundColor: colorHeader }}>\n                {startNewGame()}\n\n                <ButtonGroup disableElevation variant=\"contained\" color=\"primary\" title='header color' >\n                    <Button className='color__btn' onClick={() => { setcolorHeader('#64b5f6') }} size='small'>Blue</Button>\n                    <Button className='color__btn' onClick={() => { setcolorHeader('#e57373') }} size='small'>Pink</Button>\n                </ButtonGroup>\n                <IconButton color=\"primary\" aria-label=\"delete\" onClick={toggle} title='on/off music' >\n                    <MusicIcon />\n                </IconButton>\n                <IconButton color=\"primary\" aria-label=\"delete\" onClick={toggleSound} title='on/off sound' >\n                    <VolumeMute />\n                </IconButton>\n                <Modal />\n\n            </div>\n            <ButtonGroup disableElevation variant=\"contained\" color=\"primary\" title='container color'>\n                <Button className='color__btn' onClick={() => { setColorMain('#115293') }} size='small'>Blue</Button>\n                <Button className='color__btn' onClick={() => { setColorMain('#e57373') }} size='small'>Pink</Button>\n            </ButtonGroup>\n            <Checkbox updateData={updateData} />\n            {cancelGame()}\n\n\n            <GameField cells={gameField} onClick={handleClick} />\n\n        </div >\n    )\n}\n","\nexport function calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ]\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i]\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a]\n        }\n    }\n    return null\n}","import './App.css';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport Game from './components/Game';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className='container'>\n          <Switch>\n            <Route path='/react/tic-tac-toe/build/About'>\n              <About />\n            </Route>\n            <Route path='/react/tic-tac-toe/build/'>\n              <Game />\n            </Route>\n\n          </Switch>\n\n        </div>\n        <Footer />\n      </div>\n    </BrowserRouter>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}