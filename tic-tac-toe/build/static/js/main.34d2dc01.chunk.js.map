{"version":3,"sources":["components/Footer.js","components/About.js","components/Cell.js","components/GameField.js","components/436667__herraportti__snap3.wav","components/CheckBoxs.js","components/Modal.js","components/newgame.wav","components/winSound.wav","components/constant.js","components/Game.js","utils.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Link","href","About","Component","Cell","props","styled","div","keyframes","bounce","onClick","onChange","value","GameField","cells","map","item","index","RadioButtons","useState","icons","setIconsView","settingsState","useEffect","localStorage","setItem","JSON","stringify","handleChange","event","target","console","log","Radio","checked","color","name","inputProps","size","getModalStyle","useStyles","makeStyles","theme","paper","margin","marginTop","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","SimpleModal","classes","React","modalStyle","open","setOpen","useSound","clickSound","onKeypress","e","code","handleOpen","document","addEventListener","removeEventListener","body","style","id","Button","variant","Modal","onClose","aria-labelledby","aria-describedby","iconsView","Game","stepNext","setStepNext","Array","fill","gameField","setGameField","countStep","setCountStep","winner","squares","lines","i","length","a","b","c","calculateWinner","play","stop","newGameSound","playGame","winSound","isHovering","setIsHovering","gameState","field","count","step","isSound","gameGeneral","parse","gameGeneralSettings","startAutoPlay","setInterval","Math","floor","random","result","cancelGame","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.34d2dc01.chunk.js","sourcesContent":["import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\n\n\nexport default function Footer() {\n    return (\n        <div className='footer'>\n            <Link href=\"/ \">\n                Game\n                </Link>\n            <Link href='/About' >\n                About\n                </Link>\n            <Link href=\"https://rs.school/js/\" >\n                RS-School\n            </Link>\n            <Link href=\"https://github.com/General-m\" >\n                Github\n            </Link>\n\n\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nexport default class About extends Component {\n    render() {\n        return (\n            <div className='about'>\n                <h1> About Tic-tac-toe game</h1>\n                <div className='description'>\n                    To start a new game click New Game <br />\n                    To go autoplay click Autoplay (don't work) <br />\n                    In the settings you can configure music and other settings. <br />\n\n                    <h3>Hot keys:</h3>\n                    <kbd>N</kbd> start New Game <br />\n                    <kbd>S</kbd> open Settings <br />\n                    <kbd>W</kbd> on/off sound <br />\n                    <kbd>Q</kbd> on/off music <br />\n                    <kbd>A</kbd> change next step player (cheat mode &#128520;) <br />\n\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { bounce } from 'react-animations'\n\nexport default function Cell(props) {\n    const Bounce = styled.div`animation: 2s ${keyframes`${bounce}`} infinite`;\n\n    return (\n\n        <div className=\"cell\" onClick={props.onClick} onChange={props.onChange}>{props.value} </div>\n\n    )\n}\n","import React from 'react';\nimport Cell from './Cell'\n\nexport default function GameField({ cells, onClick, onChange }) {\n    return (\n        <div className='game__field' >\n            {\n                cells.map((item, index) => (\n                    <Cell key={index} value={item} onClick={() => onClick(index)} onChange={() => onChange(index)} />\n                ))\n            }\n        </div>\n\n    )\n}\n","export default __webpack_public_path__ + \"static/media/436667__herraportti__snap3.b0d8ddc5.wav\";","import React, { useState, useEffect } from 'react';\nimport Radio from '@material-ui/core/Radio';\n\n\n\nexport default function RadioButtons() {\n    const [icons, setIconsView] = useState('0');\n    const settingsState = {\n        icons: icons\n    }\n    useEffect(() => {\n        localStorage.setItem('gameGeneralSettings', JSON.stringify(settingsState));\n    }, [icons])\n\n    const handleChange = (event) => {\n        setIconsView(event.target.value);\n        console.log(event.target.value)\n    };\n\n\n\n\n    return (\n        <div className='view__settings'>\n            <Radio\n                checked={icons === '0'}\n                onChange={handleChange}\n                value='0'\n                color=\"default\"\n                name=\"radio-button-demo\"\n                inputProps={{ 'aria-label': 'E' }}\n                size=\"small\"\n            />\n            <div className='icons'>\n                ╳◯\n            </div>\n            <Radio\n                checked={icons === '1'}\n                onChange={handleChange}\n                value='1'\n                color=\"default\"\n                name=\"radio-button-demo\"\n                inputProps={{ 'aria-label': 'E' }}\n                size=\"small\"\n            />\n            <div className='icons'>\n                🔥❄\n            </div>\n\n\n\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button } from '@material-ui/core';\nimport useSound from 'use-sound';\nimport clickSound from './436667__herraportti__snap3.wav';\nimport Checkboxs from './CheckBoxs'\n\nfunction getModalStyle() {\n    // const top = 50 + rand();\n    // const left = 50 + rand();\n\n    return {\n        // top: '50%',\n        // left: ' 50%',\n        // transform: \"translate( 50%,  50%)\",\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        margin: 'auto',\n        marginTop: '80px',\n        // position: 'absolute',\n        width: 300,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport default function SimpleModal() {\n\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [play] = useSound(clickSound);\n\n    // function Demo() {\n    //     const [isChecked, setIsChecked] = React.useState(\n    //         false\n    //     );\n\n    //     const [playActive] = useSound(\n    //         '/sounds/pop-down.mp3',\n    //         { volume: 0.25 }\n    //     );\n    //     const [playOn] = useSound(\n    //         '/sounds/pop-up-on.mp3',\n    //         { volume: 0.25 }\n    //     );\n    //     const [playOff] = useSound(\n    //         '/sounds/pop-up-off.mp3',\n    //         { volume: 0.25 }\n    //     );\n\n    //     return (\n    //         <Checkbox\n    //             name=\"demo-checkbox\"\n    //             checked={isChecked}\n    //             size={24}\n    //             label=\"I agree to self-isolate\"\n    //             onChange={() => setIsChecked(!isChecked)}\n    //             onMouseDown={playActive}\n    //             onMouseUp={() => {\n    //                 isChecked ? playOff() : playOn();\n    //             }}\n    //         />\n    //     );\n    // }\n\n\n    useEffect(() => {\n        const onKeypress = e => {\n            switch (e.code) {\n                case 'KeyS':\n                    handleOpen();\n                    break;\n\n                default:\n                    break;\n            }\n\n        }\n\n        document.addEventListener('keypress', onKeypress);\n\n        return () => {\n            document.removeEventListener('keypress', onKeypress);\n        };\n    }, []);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const body = (\n        <div style={modalStyle} className={classes.paper}>\n            <h2 id=\"simple-modal-title\">Settings</h2>\n            <p id=\"simple-modal-description\">\n                Sound <br />\n                Music<br />\n\n\n                {/* {Demo()} */}\n\n            </p>\n            <Checkboxs />\n\n        </div>\n    );\n\n    return (\n        <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n                Settings\n            </Button>\n\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                {body}\n            </Modal>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/newgame.16f4c4c9.wav\";","export default __webpack_public_path__ + \"static/media/winSound.198c7a64.wav\";","const iconsView = [\n    ['╳', '◯'],\n    ['🔥', '❄']\n\n]\n\nexport default iconsView;","import React, { useState, useEffect } from 'react';\nimport GameField from './GameField';\nimport Modal from './Modal';\nimport { calculateWinner } from '../utils';\nimport { Button } from '@material-ui/core';\nimport useSound from 'use-sound';\nimport clickSound from './436667__herraportti__snap3.wav';\nimport newGameSound from './newgame.wav';\nimport winSound from './winSound.wav';\nimport styled, { keyframes } from 'styled-components';\nimport { bounce } from 'react-animations';\nimport iconsView from './constant'\n\n\n\nexport default function Game() {\n    const [stepNext, setStepNext] = useState(true);\n    const [gameField, setGameField] = useState(Array(9).fill(null));\n    const [countStep, setCountStep] = useState(0);\n    const winner = calculateWinner(gameField);\n    const [statusGame, setStatusGame] = useState(1);\n    const [play, { stop }] = useSound(clickSound);\n    const [playGame] = useSound(newGameSound);\n    const [playWin] = useSound(winSound);\n    const [isHovering, setIsHovering] = useState(true);\n\n    const [icons, setIconsView] = useState(0);\n\n    const gameState = {\n        field: gameField,\n        count: countStep,\n        step: stepNext,\n        isSound: isHovering,\n        // icons: icons\n    }\n    const Bounce = styled.div`animation: 2s ${keyframes`${bounce}`} infinite`;\n\n    // useEffect(() => {\n    //     playWin();\n    // }, [winner]);\n\n    useEffect(() => {\n\n        if (localStorage.gameGeneral) {\n            setGameField((JSON.parse(localStorage.gameGeneral)).field);\n            setCountStep((JSON.parse(localStorage.gameGeneral)).count);\n            setStepNext((JSON.parse(localStorage.gameGeneral)).step);\n            setIsHovering((JSON.parse(localStorage.gameGeneral)).isSound);\n        }\n        if (localStorage.gameGeneralSettings) {\n            setIconsView((JSON.parse(localStorage.gameGeneralSettings)).icons)\n        }\n    }, [icons])\n\n\n    useEffect(() => {\n        const onKeypress = e => {\n            console.log(e);\n            switch (e.code) {\n                case 'KeyN':\n                    setGameField(Array(9).fill(null));\n                    setCountStep(0);\n                    playGame();\n                    break;\n                case 'KeyW':\n                    if (isHovering) {\n                        setIsHovering(false);\n                        stop();\n                    }\n                    else {\n                        setIsHovering(true);\n                        play();\n                    }\n\n                    break;\n                case 'KeyA':\n                    setStepNext(!stepNext)\n\n\n                    break;\n\n                default:\n                    break;\n            }\n\n        }\n\n        document.addEventListener('keypress', onKeypress);\n\n        return () => {\n            document.removeEventListener('keypress', onKeypress);\n        };\n    }, [isHovering]);\n\n\n    useEffect(() => {\n        localStorage.setItem('gameGeneral', JSON.stringify(gameState));\n    })\n\n    const handleClick = (index) => {\n        const field = [...gameField];\n        if (winner || field[index]) {\n            return\n        }\n        console.log(icons);\n        field[index] = stepNext ? iconsView[icons][0] : iconsView[icons][1];\n        setStepNext(!stepNext);\n        setCountStep(countStep + 1);\n        setGameField(field);\n        if (isHovering) {\n            play();\n        }\n\n\n    }\n\n    const startNewGame = () => {\n        return (\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                setGameField(Array(9).fill(null));\n                setCountStep(0);\n                playGame();\n\n            }} >\n                New Game\n            </Button>\n        )\n    }\n\n    const startAutoPlay = (index) => {\n        setGameField(Array(9).fill(null));\n        setCountStep(0);\n        const field = [...gameField];\n        let timerId = setInterval(() => {\n            let index = Math.floor(Math.random() * 8);\n            console.log(index);\n            console.log('prosess' + countStep);\n\n            field[index] = stepNext ? 'X' : 'O';\n            setStepNext(!stepNext);\n            setCountStep(countStep + 1);\n\n\n        }, 1000);\n    }\n\n    const cancelGame = () => {\n        let result = '';\n        if (winner) {\n            result = 'Congratulations! Wins ' + winner;\n\n\n        }\n        else if (countStep == 9) {\n            result = \"It's draw, try again!\"\n        }\n        else {\n            result = 'Next move ' + (stepNext ? 'X' : 'O');\n        }\n\n\n        return (\n            <div className='game__status'>\n                {result}\n\n            </div>\n        )\n    }\n\n\n    return (\n\n\n        <div className='container' >\n            <div className='header'>\n                {startNewGame()}\n                <Button className='autoPlay' variant=\"contained\" color=\"primary\" onClick={startAutoPlay} >\n                    AutoPlay\n                    </Button>\n                <Modal />\n            </div>\n            {cancelGame()}\n\n            <GameField cells={gameField} onClick={handleClick} onChange={startAutoPlay} />\n\n        </div >\n    )\n}\n","\nexport function calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ]\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i]\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a]\n        }\n    }\n    return null\n}","import './App.css';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport Game from './components/Game';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className='container'>\n          <Switch>\n            <Route path='/About'>\n              <About />\n            </Route>\n            <Route path='/'>\n              <Game />\n            </Route>\n\n          </Switch>\n\n        </div>\n        <Footer />\n      </div>\n    </BrowserRouter>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}